package com.mygdx.game;

import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.actions.Actions;

public class Item extends BaseActor{
    public enum Type{EXPAND_CAPSULE, SHRINK_CAPSULE, SPEED_CAPSULE, SNAIL_CAPSULE, INVINCIBILITY_CAPSULE}

    private Type type;

    public Item(float x, float y, Stage s){
        super(x,y,s);
        setRandomType();

        setSpeed(100);
        setMotionAngle(270);

        setSize(50,50);
        setOrigin(25,25);
        setBoundaryRectangle();

        setScale(0,0);
        addAction(Actions.scaleTo(1,1,0.25f));
    }

    public void setType(Type t){
        type = t;
        if(t == Type.EXPAND_CAPSULE)
            loadTexture("items/tese.png");
        else if(t == Type.SHRINK_CAPSULE)
            loadTexture("items/ariva.png");
        else if(t == Type.SPEED_CAPSULE)
            loadTexture("items/torton.png");
        else if(t == Type.SNAIL_CAPSULE)
            loadTexture("items/tsava.png");
        else if(t == Type.INVINCIBILITY_CAPSULE)
            loadTexture("items/skyskraper.png");
        else
            loadTexture("items/item-blank.png");
    }

    public void setRandomType(){
        float spawnProbability = 5; // tweak whenever necessary to change probability
        if(MathUtils.random(0,100) < spawnProbability) {
            // the four main powerups -> paddle expand,paddle shrink, ball speed up, and ball speed down
            int randomIndex = MathUtils.random(0,Type.values().length - 2);
            Type randomType = Type.values()[randomIndex];
            setType(randomType);
        } else{
            // invincibility powerup
            Type invincibilityType = Type.values()[4];
            setType(invincibilityType);
        }
    }

    public Type getType(){
        return type;
    }

    public void act(float dt){
        super.act(dt);
        applyPhysics(dt);

        if(getY() <- 50)
            remove();
    }
}

