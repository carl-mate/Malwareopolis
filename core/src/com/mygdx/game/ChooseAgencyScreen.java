package com.mygdx.game;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.scenes.scene2d.Event;
import com.badlogic.gdx.scenes.scene2d.EventListener;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.utils.FocusListener;
import com.badlogic.gdx.utils.Align;

import java.io.IOException;

import util.Enum.Agency;

public class ChooseAgencyScreen extends BaseScreen{
    public static final String TAG = ChooseAgencyScreen.class.getName();

    public ChooseAgencyScreen() throws IOException {
    }

    @Override
    protected void initialize() {
        BaseActor farGround = new BaseActor(0, 0, mainStage);
        farGround.loadTexture("farground.png");
        farGround.setPosition(-367, 0);

        BaseActor midGround = new BaseActor(0, 0, mainStage);
        midGround.loadTexture("midground.png");
        midGround.setPosition(-467, 0);

        BaseActor foreGround = new BaseActor(0, 0, mainStage);
        foreGround.loadTexture("foreground.png");
        foreGround.setPosition(-567, 0);

        Label chooseAgencyLabel = new Label("Choose your agency!", BaseGame.labelStyle);

        Table chooseAgencyTable = new Table();
        chooseAgencyTable.setFillParent(true);
        uiStage.addActor(chooseAgencyTable);

        BaseActor ariva = new BaseActor(0, 0, uiStage);
        ariva.loadTexture("ariva.png");

        BaseActor tese = new BaseActor(0, 0, uiStage);
        tese.loadTexture("tese.png");

        BaseActor torton = new BaseActor(0, 0, uiStage);
        torton.loadTexture("torton.png");

        BaseActor tsava = new BaseActor(0, 0, uiStage);
        tsava.loadTexture("tsava.png");

        BaseActor skyskraper = new BaseActor(0, 0, uiStage);
        skyskraper.loadTexture("skyskraper.png");

        ariva.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED ARIVA");
                BaseGame.malwareAlleyAgency = Agency.ARIVA;
                try {
                    OSGame.setActiveScreen(new MalwareAlleyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });


        tese.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED TESE");
                BaseGame.malwareAlleyAgency = Agency.TESE;
                try {
                    OSGame.setActiveScreen(new MalwareAlleyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        torton.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED TORTON");
                BaseGame.malwareAlleyAgency = Agency.TORTON;
                try {
                    OSGame.setActiveScreen(new MalwareAlleyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        tsava.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED TSAVA");
                BaseGame.malwareAlleyAgency = Agency.TSAVA;
                try {
                    OSGame.setActiveScreen(new MalwareAlleyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        skyskraper.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED SKYSKRAPER");
                BaseGame.malwareAlleyAgency = Agency.SKYSKRAPER;
                try {
                    OSGame.setActiveScreen(new MalwareAlleyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        Label arivaLabel = new Label("Ariva", BaseGame.labelStyle);
        Label teseLabel = new Label("Tese", BaseGame.labelStyle);
        Label tortonLabel = new Label("Torton", BaseGame.labelStyle);
        Label tsavaLabel = new Label("Tsava", BaseGame.labelStyle);
        Label skyskraperLabel = new Label("Skyskraper", BaseGame.labelStyle);

        ariva.addActor(arivaLabel);
        arivaLabel.setPosition((ariva.getWidth() - arivaLabel.getWidth()) / 2, ariva.getHeight() + 5);

        tese.addActor(teseLabel);
        teseLabel.setPosition((tese.getWidth() - teseLabel.getWidth()) / 2, tese.getHeight() + 5);

        torton.addActor(tortonLabel);
        tortonLabel.setPosition((torton.getWidth() - tortonLabel.getWidth()) / 2, torton.getHeight() + 5);

        tsava.addActor(tsavaLabel);
        tsavaLabel.setPosition((tsava.getWidth() - tsavaLabel.getWidth()) / 2, tsava.getHeight() + 5);

        skyskraper.addActor(skyskraperLabel);
        skyskraperLabel.setPosition((skyskraper.getWidth() - skyskraperLabel.getWidth()) / 2, skyskraper.getHeight() + 5);

        chooseAgencyTable.pad(50);
        chooseAgencyTable.padTop(100);
        chooseAgencyTable.padBottom(200);
        chooseAgencyTable.add(chooseAgencyLabel).colspan(5).align(Align.top);
        chooseAgencyTable.add().expandY();
        chooseAgencyTable.row();
        chooseAgencyTable.add(ariva).expandX().center();
        chooseAgencyTable.add(tese).expandX().center();
        chooseAgencyTable.add(torton).expandX().center();
        chooseAgencyTable.add(tsava).expandX().center();
        chooseAgencyTable.add(skyskraper).expandX().center();
    }

    @Override
    public void update(float dt) {

    }
}
