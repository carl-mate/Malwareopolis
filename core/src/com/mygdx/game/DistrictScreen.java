package com.mygdx.game;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.scenes.scene2d.Event;
import com.badlogic.gdx.scenes.scene2d.EventListener;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.ui.Table;

import java.io.IOException;

public class DistrictScreen extends BaseScreen{
    public static final String TAG = MalwareAlleyScreen.class.getName();

    public DistrictScreen() throws IOException {
    }

    @Override
    protected void initialize() {
        BaseActor background = new BaseActor(0, 0, mainStage);
        background.loadTexture("district-screen-bg.png");

        BaseActor malwareAlleyDistrict = new BaseActor(0,0, mainStage);
        malwareAlleyDistrict.loadTexture("malware-alley-district.png");

        BaseActor rampageDistrictDistrict = new BaseActor(0,0, mainStage);
        rampageDistrictDistrict.loadTexture("rampage-district-district.png");

        BaseActor groundZeroDistrict = new BaseActor(0, 0, mainStage);
        groundZeroDistrict.loadTexture("ground-zero-district.png");


        malwareAlleyDistrict.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED MALWARE ALLEY DISTRICT");
                try {
                    OSGame.setActiveScreen(new ChooseAgencyScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        rampageDistrictDistrict.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED RAMPAGE DISTRICT DISTRICT");
                try {
                    OSGame.setActiveScreen(new RampageDistrictScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });

        groundZeroDistrict.addListener(new EventListener() {
            @Override
            public boolean handle(Event e) {
                if (!(e instanceof InputEvent) ||
                        !((InputEvent) e).getType().equals(InputEvent.Type.touchDown)) {
                    return false;
                }
                Gdx.app.log(TAG, "CLICKED GROUND ZERO DISTRICT");
                try {
                    OSGame.setActiveScreen(new GroundZeroScreen());
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                return false;
            }
        });



        initStarRating(malwareAlleyDistrict);
        initStarRating(rampageDistrictDistrict);
        initStarRating(groundZeroDistrict);

        uiTable.add().expandY();
        uiTable.add(malwareAlleyDistrict).expandX().bottom();
        uiTable.add(rampageDistrictDistrict).expandX().bottom();
        uiTable.add(groundZeroDistrict).expandX().bottom();

    }

    private void initStarRating(BaseActor district){
        Table starTable = new Table();
        starTable.setFillParent(true);
        uiStage.addActor(starTable);

        for(int i = 0; i < 3; i++){
            BaseActor star = new BaseActor(0, 0, mainStage);
            star.loadTexture("star.png");
            starTable.add(star).top();
        }
        starTable.add().expandY();
        district.addActor(starTable);
//        starTable.setPosition((district.getWidth() - starTable.getWidth()) / 2, 0);
        starTable.setPosition(0,40);
    }

    @Override
    public void update(float dt) {

    }
}
