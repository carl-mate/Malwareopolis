package com.mygdx.game;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.InputMultiplexer;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle;
import com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable;

import java.io.IOException;

import util.Enum;
import util.Enum.Agency;
import util.QuestionsManager.Question;

public abstract class BaseGame extends Game {
    private static BaseGame game;
    public static TextButtonStyle textButtonStyle;
    public static LabelStyle choiceButtonStyle;
    public static LabelStyle labelStyle;
    public static LabelStyle labelStyleBlack;
    public static Agency malwareAlleyAgency;
    public static BitmapFont uiFont;
    public static Label label;


    public BaseGame(){
        game = this;
    }

    @Override
    public void create() {
        InputMultiplexer im = new InputMultiplexer();
        Gdx.input.setInputProcessor(im);

        FreeTypeFontGenerator pixelfontGenerator = new FreeTypeFontGenerator(Gdx.files.internal("04B_03__.TTF"));
        FreeTypeFontParameter pixelfontParameters = new FreeTypeFontParameter();

        pixelfontParameters.size = 40;
        pixelfontParameters.color = Color.valueOf("13f4fe");
        pixelfontParameters.minFilter = Texture.TextureFilter.Linear;
        pixelfontParameters.magFilter = Texture.TextureFilter.Linear;

        BitmapFont pixelFont = pixelfontGenerator.generateFont(pixelfontParameters);

        textButtonStyle = new TextButtonStyle();
        textButtonStyle.font = pixelFont;

        FreeTypeFontGenerator questionsChoicesFontGenerator = new FreeTypeFontGenerator(Gdx.files.internal("Retro Gaming.ttf"));
        FreeTypeFontParameter questionsChoicesFontParameters = new FreeTypeFontParameter();
        FreeTypeFontParameter uiFontParameters = new FreeTypeFontParameter();

        questionsChoicesFontParameters.size = 10;
        questionsChoicesFontParameters.color = Color.WHITE;
        questionsChoicesFontParameters.minFilter = Texture.TextureFilter.Linear;
        questionsChoicesFontParameters.magFilter = Texture.TextureFilter.Linear;

        uiFontParameters.size = 20;
        uiFontParameters.color = Color.WHITE;
        uiFontParameters.minFilter = Texture.TextureFilter.Linear;
        uiFontParameters.magFilter = Texture.TextureFilter.Linear;

        BitmapFont questionsChoicesFont = questionsChoicesFontGenerator.generateFont(questionsChoicesFontParameters);
        uiFont = questionsChoicesFontGenerator.generateFont(uiFontParameters);

        choiceButtonStyle = new LabelStyle();
        choiceButtonStyle.font = questionsChoicesFont;

        labelStyle = new LabelStyle();
        labelStyle.font = uiFont;


        labelStyleBlack = new LabelStyle();
        labelStyleBlack.fontColor = Color.BLACK;
        labelStyleBlack.font = uiFont;
    }


    public static void setActiveScreen(BaseScreen s){
        game.setScreen(s);
    }
}
